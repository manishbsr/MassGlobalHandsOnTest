// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace HandsOnTest.DataAccessLayer.ExternalSourceClient
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
	//using HandsOnTest.DataAccessLayer.Models;
	using HandsOnTest.DbModels;

    /// <summary>
    /// Extension methods for ExternalSourceClientClient.
    /// </summary>
    public static partial class ExternalSourceClientClientExtensions
    {
            /// <summary>
            /// Gets a list of employees with their data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<Employee> ApiEmployeesGet(this IExternalSourceClientClient operations)
            {
                return Task.Factory.StartNew(s => ((IExternalSourceClientClient)s).ApiEmployeesGetAsync(), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets a list of employees with their data.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<Employee>> ApiEmployeesGetAsync(this IExternalSourceClientClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiEmployeesGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
